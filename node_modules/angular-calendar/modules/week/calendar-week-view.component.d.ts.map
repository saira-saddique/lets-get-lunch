{"version":3,"file":"calendar-week-view.component.d.ts","sources":["calendar-week-view.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, ChangeDetectorRef, OnChanges, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { WeekDay, CalendarEvent, WeekViewEvent, WeekView, ViewPeriod } from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nexport interface WeekViewEventResize {\n    originalOffset: number;\n    originalSpan: number;\n    edge: string;\n}\nexport interface CalendarWeekViewBeforeRenderEvent {\n    header: WeekDay[];\n    period: ViewPeriod;\n}\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\nexport declare class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n    private cdr;\n    private utils;\n    /**\n     * The current view date\n     */\n    viewDate: Date;\n    /**\n     * An array of events to display on view\n     * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n    events: CalendarEvent[];\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n    excludeDays: number[];\n    /**\n     * An observable that when emitted on will re-render the current view\n     */\n    refresh: Subject<any>;\n    /**\n     * The locale used to format dates\n     */\n    locale: string;\n    /**\n     * The placement of the event tooltip\n     */\n    tooltipPlacement: string;\n    /**\n     * A custom template to use for the event tooltips\n     */\n    tooltipTemplate: TemplateRef<any>;\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n    tooltipAppendToBody: boolean;\n    /**\n     * The start number of the week\n     */\n    weekStartsOn: number;\n    /**\n     * A custom template to use to replace the header\n     */\n    headerTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for week view events\n     */\n    eventTemplate: TemplateRef<any>;\n    /**\n     * A custom template to use for event titles\n     */\n    eventTitleTemplate: TemplateRef<any>;\n    /**\n     * The precision to display events.\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n     */\n    precision: 'days' | 'minutes';\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n     */\n    weekendDays: number[];\n    /**\n     * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n     */\n    dayHeaderClicked: EventEmitter<{\n        day: WeekDay;\n    }>;\n    /**\n     * Called when the event title is clicked\n     */\n    eventClicked: EventEmitter<{\n        event: CalendarEvent;\n    }>;\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n    eventTimesChanged: EventEmitter<CalendarEventTimesChangedEvent>;\n    /**\n     * An output that will be called before the view is rendered for the current week.\n     * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n     */\n    beforeViewRender: EventEmitter<CalendarWeekViewBeforeRenderEvent>;\n    /**\n     * @hidden\n     */\n    days: WeekDay[];\n    /**\n     * @hidden\n     */\n    view: WeekView;\n    /**\n     * @hidden\n     */\n    refreshSubscription: Subscription;\n    /**\n     * @hidden\n     */\n    currentResizes: Map<WeekViewEvent, WeekViewEventResize>;\n    /**\n     * @hidden\n     */\n    validateDrag: (args: any) => boolean;\n    /**\n     * @hidden\n     */\n    validateResize: (args: any) => boolean;\n    /**\n     * @hidden\n     */\n    dayColumnWidth: number;\n    /**\n     * @hidden\n     */\n    trackByIndex: (index: number) => number;\n    /**\n     * @hidden\n     */\n    trackByEventId: (index: number, weekEvent: WeekViewEvent) => string | number | WeekViewEvent;\n    /**\n     * @hidden\n     */\n    constructor(cdr: ChangeDetectorRef, utils: CalendarUtils, locale: string);\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    resizeStarted(weekViewContainer: HTMLElement, weekEvent: WeekViewEvent, resizeEvent: ResizeEvent): void;\n    /**\n     * @hidden\n     */\n    resizing(weekEvent: WeekViewEvent, resizeEvent: ResizeEvent, dayWidth: number): void;\n    /**\n     * @hidden\n     */\n    resizeEnded(weekEvent: WeekViewEvent): void;\n    /**\n     * @hidden\n     */\n    eventDragged(weekEvent: WeekViewEvent, draggedByPx: number, dayWidth: number): void;\n    /**\n     * @hidden\n     */\n    getDayColumnWidth(eventRowContainer: HTMLElement): number;\n    /**\n     * @hidden\n     */\n    dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void;\n    private refreshHeader();\n    private refreshBody();\n    private refreshAll();\n    private emitBeforeViewRender();\n}\n"]}